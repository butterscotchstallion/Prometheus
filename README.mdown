About
-----

Prometheus is a command-line PHP tool to make automated database changes born from the misery and strife of doing it manually

One of my very first long-running projects involved periodically updating the database and code, and as you might imagine, doing it manually eventually became quite a burden.

Thus, Prometheus was born. After I automated this task, it was like fire was given to my team and we basked in the glory of automated upgrades.

I also wrote about my trials and errors here: http://prgmrbill.com/2012/03/database-migrations-php-mysql/

How does it work?
-----
Prometheus looks for PHP files in directories you specify. It includes each file and runs the code
inside of it. Because the updates are PHP, they can analyze the database structure and determine
if a particular update has already been applied. Prometheus supplies helper methods such as hasTable,
hasColumn, hasIndex, etc. The end result is that you can run updates repeatedly without error.
Without this logic, some queries would fail (like CREATE TABLE...). This is why one cannot simply
run SQL files.

Screenshot
-----
![alt text](https://github.com/prgmrbill/Prometheus/blob/master/prometheus.png?raw=true "Screenshot")

Requirements
-----
Prometheus is written in PHP and uses Composer (http://getcomposer.org) to manage its dependencies.   

Usage
-----
```php
<?php
/**
 * Basic example of how to use Prometheus. Don't forget to copy
 * the config file!
 *
 */
error_reporting(-1);
date_default_timezone_set('America/New_York');
ini_set('error_log', realpath('logs/error.log'));
ini_set('display_errors', true);

// Prometheus uses Composer (http://getcomposer.org) to manage its
// dependencies. If you use it, it will automatically generate this
// autoloader file.
require 'vendor/autoload.php';

$cfgPath = realpath('src/Prometheus/Config/Config.php');

if (!is_readable($cfgPath)) {
    die(sprintf('Config not found in "%s"', $cfgPath));
}

require $cfgPath;

$p = new Prometheus\Prometheus();

// Pass log path to enable logging
$p->enableLogging(realpath('./logs/Prometheus.log'));  

// Pass backup path to enable database backups
$p->enableDatabaseBackup(getcwd());

// Pass an array of emails to receive mail when upgrades are completed
// Note: this uses a gmail account to send mail. Set MAIL_USER and MAIL_PASSWORD
// in the config.
$p->setReportRecipients(array('bill@prgmrbill.com'));

// Pass an array of directories which contain PHP files (updates)
$p->run(array(sprintf('%s/src/Prometheus/Test/Fixture/Updates', __DIR__)));

```


